<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"
        "http://struts.apache.org/dtds/struts-2.5.dtd">


<struts>
	<!-- 当struts.xml配置文件发生修改，会立刻加载，在生产环境下最好不要配置 -->
	<constant name="struts.configuration.xml.reload" value="true" />
	<!-- 支持动态请求 , 在这里 默认动态请求是关闭的，需要手动开启 -->
	<constant name="struts.enable.DynamicMethodInvocation" value="true" />
	<!-- 开启开发者模式 -->
	<constant name="struts.devMode" value="true"></constant>
	<!-- 需要继承struts-default包，这样就拥有的最基本的功能 -->
	<package name="main" extends="struts-default">
		<interceptors>
			<!-- 声明拦截器 -->
			<interceptor name="AccessControlnterceptor"
				class="com.tourism.gis.Interceptor.AccessControlnterceptor"></interceptor>

			<!-- 定义自己的拦截器栈 -->
			<interceptor-stack name="myInterceptorStack">
				<interceptor-ref name="AccessControlnterceptor"></interceptor-ref>
				<!-- defaultStack：Struts2的默认拦截器栈 -->
				<interceptor-ref name="defaultStack"></interceptor-ref>
			</interceptor-stack>
		</interceptors>
		<!-- 定义为缺省拦截器，所有的Action都会得到使用 -->
		<default-interceptor-ref name="myInterceptorStack" />
		<global-results>
			<!-- 登录时模态框 没有登录的就转到首页 -->
			<result name="loginUI" type="redirect">/index.jsp</result>
			<result name="adminLoginUI" type="redirect">/adminLogin.jsp</result>
		</global-results>

		<global-allowed-methods>regex:.*</global-allowed-methods>
	</package>

	<package name="user" namespace="/" extends="main">

		<action name="user-*" class="loginAction" method="{1}">
			<result name="login" type="redirect">/index.jsp</result>
			<result name="success" type="redirect">/index.jsp</result>
			<result name="logout">/logout.jsp</result>
			<result name="input" type="redirect">/index.jsp</result>
			<result name="info">/info.jsp</result>
			<result name="register">/register.jsp</result>
			<result name="isExistUserJson" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
			<!-- <allowed-methods>login</allowed-methods> -->
		</action>

		<!-- LandMarkAction -->
		<action name="land-*" class="landMarkAction" method="{1}">
			<result name="landJson" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>
		<!-- 这个Action 不需要和数据库交互 所以没有使用Spring进行管理 有Struts 进行管理就好 -->
		<action name="geo-*" class="com.tourism.gis.action.GeoCodeAction"
			method="{1}">
			<result name="geoJson" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<!-- ArticleAction -->
		<action name="blog-*" class="articleAction" method="{1}">
			<result name="input" type="redirect">/index.jsp</result>
			<result name="blogList" type="redirect">/article/articleList.jsp</result>
			<result name="infoList" type="redirect">/info/infoList.jsp</result>
			<result name="blogDetail">/article/articleDetail.jsp</result>
			<result name="infoDetail">/info/infoDetail.jsp</result>
			<result name="info">/info.jsp</result>
			<result name="self" type="redirect">/user/userInfo.jsp</result>
			<result name="index" type="redirect">/index.jsp</result>
			<result name="blogJson" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<!-- ImageAction -->
		<action name="img-*" class="imageAction" method="{1}">
			<result name="imgJson" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param> 
			</result>
		</action>

		<!-- ResultAction -->
		<action name="result-*" class="resultAction" method="{1}">
			<result name="query">/search_results.jsp</result>
			<result name="input">/search_results.jsp</result>
		</action>


		<!-- ScenicSpotAction -->
		<action name="spot-*" class="scenicSpotAction" method="{1}">
			<result name="infoList" type="redirect">/scenic/scenicList.jsp</result>
			<result name="infoDetail">/scenic/scenicDetail.jsp</result>
		</action>

		<!-- ScenicTypeAction -->
		<action name="type-*" class="scenicTypeAction" method="{1}">
			<result></result>
		</action>

		<!-- UserAction -->
		<action name="users-*" class="userAction" method="{1}">
			<result name="userJson" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
			<result name="info">/info.jsp</result>
			<result name="self" type="redirect">/user/userInfo.jsp</result>
		</action>

		<!-- RoleAction -->
		<action name="role-*" class="roleAction" method="{1}">
			<result name="roleJson" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<!-- ResourceAction -->
		<action name="res-*" class="resourceAction" method="{1}">
			<result name="resJson" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>
	</package>


	<package name="admin" namespace="/admin" extends="main">
	
		<!-- LandMarkAction -->
		<action name="adminLand-*" class="adminLandMarkAction" method="{1}">
			<result name="adminLandJson" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>


		<!-- ArticleAction -->
		<action name="adminBlog-*" class="adminArticleAction" method="{1}">
			<result></result>
			<result name="blogJson" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<!-- ImageAction -->
		<action name="adminImg-*" class="adminImageAction" method="{1}">
			<result name="input">/admin/index.jsp</result>	
			<result name="adminImgJson" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<!-- ScenicSpotAction -->
		<action name="adminSpot-*" class="AdminScenicSpotAction" method="{1}">
			<result name="input">/admin/scenic/scenicSpot/addScenicSpot.jsp</result>
			<result name="spotJson" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<!-- ScenicTypeAction -->
		<action name="adminType-*" class="adminScenicTypeAction" method="{1}">
			<result name="input">/admin/index.jsp</result>	
			<result name="typeJson" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<!-- AdminUserAction -->
		<action name="admin-*" class="adminUserAction" method="{1}">
			<result name="login">/admin/index.jsp</result>
			<result name="input">/adminLogin.jsp</result>
			<result name="logout" type="redirect">/adminLogin.jsp</result>
			<result name="adminJson" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<!-- UserAction -->
		<action name="adminUser-*" class="adminuserAction" method="{1}">
			<result name="userJson" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<!-- RoleAction -->
		<action name="adminRole-*" class="adminRoleAction" method="{1}">
			<result name="roleJson" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<!-- ResourceAction -->
		<action name="adminRes-*" class="AdminResourceAction" method="{1}">
			<result name="resJson" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>
	</package>
</struts>